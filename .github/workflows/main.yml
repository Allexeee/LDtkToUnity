name: Main Build Actions

on: [push, pull_request]

jobs:
  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          #- StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows # Build a Windows standalone.
          #- StandaloneWindows64 # Build a Windows 64-bit standalone.
          #- StandaloneLinux64 # Build a Linux 64-bit standalone.
          #- iOS # Build an iOS player.
          #- Android # Build an Android .apk standalone app.
          #- WebGL # WebGL.
          
    steps:
    
    #Checkout
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
          
    #Cache
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
          
    #Build
      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          #unityVersion: 2021.2.0f1
          targetPlatform: ${{ matrix.targetPlatform }}
          
    #Artifact
      - uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
          
  testAllModes:
      name: Test in ${{ matrix.testMode }}
      runs-on: ubuntu-latest
      strategy:
        fail-fast: false
        matrix:
          testMode:
            - playmode
            - editmode
      steps:
        - uses: actions/checkout@v2
          with:
            lfs: true
        - uses: actions/cache@v2
          with:
            path: ${{ matrix.projectPath }}/Library
            key: Library-${{ matrix.projectPath }}
            restore-keys: |
              Library-
        - uses: game-ci/unity-test-runner@v2
          id: tests
          env:
            UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          with:
            projectPath: ${{ matrix.projectPath }}
            testMode: ${{ matrix.testMode }}
            artifactsPath: ${{ matrix.testMode }}-artifacts
            githubToken: ${{ secrets.GITHUB_TOKEN }}
            checkName: ${{ matrix.testMode }} Test Results
            unityVersion: 
              - 2019.3.0f1
              - 2019.4.0f1
              - 2020.1.0f1
              - 2020.2.0f1
              - 2020.3.0f1
              - 2021.1.0f1
              - 2021.2.0f1
        - uses: actions/upload-artifact@v2
          if: always()
          with:
            name: Test results for ${{ matrix.testMode }}
            path: ${{ steps.tests.outputs.artifactsPath }}